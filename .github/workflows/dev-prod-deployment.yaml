name: Dev Prod Deployment

on:
  release:
    types: [ "published" ]
  workflow_dispatch:

# TODO: Change the env variables to match your service
env:
  # The registry to push the image to.
  REGISTRY: ghcr.io
  REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }} # TODO: Setup your github username as a secret before running the workflow
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }} # TODO: Setup your github Personal Access Token as a secret before running the workflow
  # platforms to build the image for
  PLATFORMS: linux/arm64,linux/amd64
  # omnistrate credentials, service name, dev and prod environment names
  OMNISTRATE_USERNAME: ${{ secrets.OMNISTRATE_USERNAME }}
  OMNISTRATE_PASSWORD: ${{ secrets.OMNISTRATE_PASSWORD }}
  OMNISTRATE_SERVICE_NAME: hello-world
  OMNISTRATE_DEV_ENVIRONMENT_NAME: Dev
  OMNISTRATE_PROD_ENVIRONMENT_NAME: Production

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:

  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - dockerfile: ./Dockerfile # Path to the Dockerfile. TODO: Change this to your Dockerfile path
            image-name: ${{ github.repository }}

    permissions:
      contents: read
      packages: write
      id-token: write

    concurrency:
      group: package-${{ github.workflow }}-${{ github.head_ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.image-name }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,format=long

      - name: Convert image name to lowercase
        id: convert-name
        run: echo "IMAGE_NAME=$(echo ${{ matrix.image-name }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push multi-arch
        timeout-minutes: 20
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: ${{ env.PLATFORMS }}
          build-args: |
            # TODO: Add build arguments here if needed
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-dev:
    needs: build-and-push
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        plans: # List of plans to update. TODO: Change this to your service plans
          - file: compose.free.yaml # Path to the spec file.
          - file: compose.pro.yaml
          # TODO: Add more plans here if needed
    environment: Dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Replace Variables
        run: |
          sed -i 's/$IMAGE_REGISTRY_PASSWORD/${{ env.REGISTRY_PASSWORD }}/g' ${{ matrix.plans.file }}
          sed -i 's/$IMAGE_REGISTRY_USERNAME/${{ env.REGISTRY_USERNAME }}/g' ${{ matrix.plans.file }}

      - name: Update Omnistrate plan in dev environment
        uses: ./.github/actions/update-omnistrate-plan
        with:
          username: ${{ env.OMNISTRATE_USERNAME }}
          password: ${{ env.OMNISTRATE_PASSWORD }}
          file: ${{ matrix.plans.file }}
          service-name: ${{ env.OMNISTRATE_SERVICE_NAME }}
          environment: ${{ env.OMNISTRATE_DEV_ENVIRONMENT_NAME }}
          environment-type: dev

  deploy-to-prod:
    needs: deploy-to-dev
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        plans: # List of plans to update. TODO: Change this to your service plans
          - file: compose.free.yaml # Path to the spec file.
          - file: compose.pro.yaml
          # TODO: Add more plans here if needed
    environment: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Replace Variables
        run: |
          sed -i 's/$IMAGE_REGISTRY_PASSWORD/${{ env.REGISTRY_PASSWORD }}/g' ${{ matrix.plans.file }}
          sed -i 's/$IMAGE_REGISTRY_USERNAME/${{ env.REGISTRY_USERNAME }}/g' ${{ matrix.plans.file }}

      - name: Update Omnistrate plan in prod environment
        uses: ./.github/actions/update-omnistrate-plan
        with:
          username: ${{ env.OMNISTRATE_USERNAME }}
          password: ${{ env.OMNISTRATE_PASSWORD }}
          file: ${{ matrix.plans.file }}
          service-name: ${{ env.OMNISTRATE_SERVICE_NAME }}
          environment: ${{ env.OMNISTRATE_PROD_ENVIRONMENT_NAME }}
          environment-type: prod